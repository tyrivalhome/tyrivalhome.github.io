{
  "success": true,
  "data": [
    {
      "id": 1,
      "text": "测试图表",
      "category": "chart",
      "name": "DynamicChart",
      "config": "(function() {\n   return {\n       style: {\n           width: 400,\n           height: 300,\n           opacity: 1,\n           visibility: 'visible'\n       },\n       option: {\n           title: {\n               show: false,\n               text: '柱状图',\n               textStyle: {\n                   color: '#fff',\n                   fontSize: '22',\n                   fontWeight: 'normal'\n               },\n           },\n           dataset: {\n               dimensions: null,\n               source: null,\n           },\n           backgroundColor: 'rgba(0,0,0,0)',\n           grid: {\n               top: 50,\n               left: 50,\n               right: 50,\n               bottom: 50\n           },\n           legend: {\n               show: true,\n               data: ['数据0'],\n               textStyle: {\n                   fontSize: 12,\n                   color: '#ffffff'\n               },\n               x: 'center',\n               y: 'bottom',\n           },\n           tooltip: {\n               show: true,\n               trigger: 'axis',\n               backgroundColor: 'rgba(0,0,0,0.6)',\n               axisPointer: {\n                   type: 'shadow',\n                   label: {\n                       show: true,\n                       backgroundColor: '#0286ff'\n                   }\n               },\n               textStyle: {\n                   color: '#ffffff',\n                   fontSize: 16,\n                   fontWeight: 'normal',\n               },\n           },\n           xAxis: [{\n               type: 'category',\n               gridIndex: 0,\n               data: null,\n               axisTick: {\n                   alignWithLabel: true\n               },\n               axisLine: {\n                   lineStyle: {\n                       color: '#0c3b71'\n                   }\n               },\n               axisLabel: {\n                   show: true,\n                   interval: 0,\n                   rotate: 0,\n                   color: 'rgb(170,170,170)',\n                   fontSize: 16\n               }\n           }],\n           yAxis: [{\n               type: 'value',\n               gridIndex: 0,\n               splitLine: {\n                   show: false\n               },\n               axisTick: {\n                   show: false\n               },\n               axisLine: {\n                   lineStyle: {\n                       color: '#0c3b71'\n                   }\n               },\n               axisLabel: {\n                   show: true,\n                   color: 'rgb(170,170,170)',\n                   formatter: '{value}'\n               },\n               max: 100\n\n           }, {\n               type: 'value',\n               splitLine: {\n                   show: false\n               },\n               axisLine: {\n                   show: false\n               },\n               axisTick: {\n                   show: false\n               },\n               axisLabel: {\n                   show: false\n               }\n           }],\n           series: [{\n               name: '数据0',\n               type: 'bar',\n               barWidth: '20%',\n               barGap: '40%',\n               xAxisIndex: 0,\n               yAxisIndex: 0,\n               label: {\n                   normal: {\n                       show: true,\n                       position: 'top',\n                       textStyle: {\n                           color: '#2bff4e',\n                           fontSize: 16\n                       }\n                   }\n               },\n               itemStyle: {\n                   normal: {\n                       barBorderRadius: 0,\n                       isSingle: true,\n                       color: '#ff0202'\n                   }\n               }\n           }],\n           markLines: [\n               {\n                   show: true,\n                   markLine: {\n                       data: [{yAxis: 50}],\n                       lineStyle: {\n                           width: '1',\n                           opacity: '1'\n                       }\n                   }\n               }\n           ]\n\n       },\n       data: [\n           {name: '周一', series0: 80, series1: 60},\n           {name: '周二', series0: 87, series1: 80},\n           {name: '周三', series0: 51, series1: 50},\n           {name: '周四', series0: 81, series1: 89},\n           {name: '周五', series0: 23, series1: 56},\n           {name: '周六', series0: 45, series1: 32},\n           {name: '周日', series0: 33, series1: 77}\n       ],\n       event: [\n           {\n               name: 'click',\n               comment: '点击事件',\n               binders: [\n                   {name: 'name', comment: '数据名', prop: 'name', state: null},\n                   {name: 'data', comment: '数据值', prop: 'data', state: null},\n               ]\n           }\n       ],\n       proxy: {\n           type: 1,\n       },\n       transform: {\n           mapper: {\n               name: null,\n               series0: null\n           }\n       },\n       trigger: [\n           {\n               show: true,\n               name: '可见性',\n               binder: null,\n               prop: \"config.style.visibility\",\n               defaultValue: true,\n               isScript: true,\n               mapper: [\n                   {key: true, value: 'visible', comment: '返回 true 时显示'},\n                   {key: false, value: 'hidden', comment: '返回 false 时隐藏'},\n               ]\n           }\n       ],\n       handler: function (config) {\n           let dimensions = []\n           for (let key in config.transform.mapper) {\n               let dim = config.transform.mapper[key] || key\n               if (!config.data[0].hasOwnProperty(dim)) {\n                   dim = null\n               }\n               dimensions.push(dim)\n           }\n           config.option.dataset = {\n               dimensions: dimensions,\n               source: config.data\n           }\n           for (let i in config.option.series) {\n               if (config.option.markLines[i].show)\n                   config.option.series[i].markLine = config.option.markLines[i].markLine;\n           }\n\n       }\n   }\n})()",
      "image": "./data/screen/custom_chart_sample.png"
    }
  ]
}